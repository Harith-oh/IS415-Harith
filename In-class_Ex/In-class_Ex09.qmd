---
title: "In-class Exercise 9"
author: "Harith Oh Yee Choon"
date: "13 March 2023"
date-modified: "`r Sys.Date()`"
format: html
execute:
  eval: true
  echo: true
  warning: false
editor: visual
---

```{r}
pacman::p_load(sf, spdep, GWmodel, SpatialML, tidyverse, tmap, ggpubr, olsrr, devtools,
              tidymodels, rsample)
```

## Preparing Data

### Reading data file to rds

```{r}
mdata <- read_rds("data/Aspatial/mdata.rds")
```

### Data Sampling

```{r}
set.seed(1234)
resale_split <- initial_split(mdata,prop = 6.5/10,)
train_data <- training(resale_split)
test_data <- testing(resale_split)
```

```{r}
price_mlr <- lm(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,
                data=train_data)


summary(price_mlr)
```


```{r}
write_rds(price_mlr, "data/rds/price_mlr.rds")
```

# gwr predictive model

```{r}
train_data_sp <- as_Spatial(train_data)
train_data_sp
```


## Preparing coordinate data 

### Extracting coordinates data 

The code chunks below extract the x,y coordinates of the full, training and test data sets.

```{r}
coords <- st_coordinates(mdata)
coords_train <- st_coordinates(train_data)
coords_test <- st_coordinates(test_data)
```

```{r}
coords_train <- write_rds(coords_train, "data/rds/coords_train.rds")

coords_test <- write_rds(coords_test,"data/rds/coords_test.rds")
```

### Dropping geometry field 

First, we will drop geometry column of the sf data frame by using st_drop_geometry() of sf package
```{r}
train_data <- train_data %>%
  st_drop_geometry()
```




## Calibrating Random Forest 

preforming random forest calibration by using [**ranger**]
```{r}
set.seed(1234)
rf <- ranger(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,
                data=train_data)
```


## Calibrating Geographically Weighted Random Forest Model

In this section, you will learn how to calibrate a predict model by 


The code chunk beow calibrate a geographic random forest model by using 'grf()' f **SpatialML** package.

```{r}
set.seed(1234)

gwRF_adaptive <- grf(resale_price ~ floor_area_sqm +
                  storey_order + remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,
                dframe=train_data,
                bw=55,
                kernel="adaptive",
                coords=coords_train)
```
